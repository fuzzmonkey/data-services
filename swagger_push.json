{
    "swagger": "2.0",
    "info": {
        "title": "Data Services Push API",
        "description": "API for push notifications for racing related data. Notifcations are sent from the Ed Bet Tech server to the client server via HTTP Post. The type of notication is contained in the 'update_type' attribute in the JSON header attribute.\n\n** Notification Types **\n\n| NotificationType | Object Type | Description |\n| -----------------|-------------|-------------|\n| meeting | Meeting | Sent when a new meeting is created in the system\n| event | Event | Sent when an event start time changes, status changes, available pools change or when finish positions are available |\n| event_competitor | EventCompetitor | Sent when a competitor is scratched from an event or competitor details change |\n| market | SingleLegToteMarket or MultiLegToteMarket | Sent when market data changes, e.g prices or pool total is updated |\n| results | ToteResultMarket | Sent when payouts become available for a given event / provider |\n\nThe JSON body will contain two top level attributes:\n\n* header\n* payload\n\nPayload contains information specific to the update type, header contains information to indentify which event the update applies to.\n\n`\n  {\n     \"header\": {\n         \"country_code\": \"AUS\",\n         \"event_id\": \"34693\",\n         \"event_number\": \"4\",\n         \"meeting_date\": \"2016-12-17\",\n         \"meeting_id\": \"3865\",\n         \"update_type\": \"event\",\n         \"venue_type\": \"THOROUGHBRED\"\n     },\n     \"payload\": {\n         \"finishers\": {},\n         \"start_time\": 1481947920,\n         \"status\": â€œCLOSED\"\n     }\n  }\n`\n",
        "version": "PRE RELEASE"
    },
    "paths": {
        "/": {
            "post": {
                "description": "This is a HTTP push protocol, HTTP payloads are sent to a client HTTP server.",
                "responses": {
                    "default": {
                        "description": "Payloads are pushed via HTTP"
                    }
                }
            }
        },
        "/header": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the header.",
                        "schema": {
                            "$ref": "#/definitions/Header"
                        }
                    }
                }
            }
        },
        "/MEETING": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the MEETING notifcation type. This will be sent as a HTTP POST to your root domain (e.g example.com/) with the header['update_type'] of meeting",
                        "schema": {
                            "$ref": "#/definitions/Meeting"
                        }
                    }
                }
            }
        },
        "/EVENT": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the EVENT notifcation type. This will be sent as a HTTP POST to your root domain (e.g example.com/) with the  header['update_type'] of event",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                }
            }
        },
        "/EVENT_COMPETITOR": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the EVENT_COMPETITOR notifcation type. This will be sent as a HTTP POST to your root domain (e.g example.com/) with the header['update_type'] of event_competitor",
                        "schema": {
                            "$ref": "#/definitions/EventCompetitor"
                        }
                    }
                }
            }
        },
        "/MARKET_SINGLE_LEG": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the single leg MARKET notifcation type. This will be sent as a HTTP POST to your root domain (e.g example.com/) with the  header['update_type'] of market",
                        "schema": {
                            "$ref": "#/definitions/SingleLegToteMarket"
                        }
                    }
                }
            }
        },
        "/MARKET_MULTI_LEG": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the multi leg MARKET notifcation type. This will be sent as a HTTP POST to your root domain (e.g example.com/) with the  header['update_type'] of market",
                        "schema": {
                            "$ref": "#/definitions/MutliLegToteMarket"
                        }
                    }
                }
            }
        },
        "/RESULTS": {
            "post": {
                "responses": {
                    "default": {
                        "description": "The schema for the RESULTS notifcation type. This will be sent as a HTTP POST to your root domain (e.g example.com/) with the  header['update_type'] of results",
                        "schema": {
                            "$ref": "#/definitions/ToteResultMarket"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Header": {
            "type": "object",
            "properties": {
                "country_code": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "event_number": {
                    "type": "string"
                },
                "meeting_date": {
                    "type": "string",
                    "format": "YYYY-MM-DD"
                },
                "meeting_id": {
                    "type": "string"
                },
                "update_type": {
                    "type": "string"
                },
                "venue_type": {
                    "type": "string"
                }
            }
        },
        "Meeting": {
            "type": "object",
            "properties": {
                "meeting_id": {
                    "type": "integer"
                },
                "meeting_date": {
                    "type": "string",
                    "format": "YYYY-MM-DD"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "OPEN",
                        "CLOSED"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "venue": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "venue_type": {
                            "type": "string"
                        },
                        "country": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "alpha_2_code": {
                                    "type": "string"
                                },
                                "alpha_3_code": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "OPEN",
                        "CLOSED",
                        "FINAL",
                        "ABANDONED",
                        "PROTEST",
                        "SUSPENDED",
                        "INTERIM"
                    ]
                },
                "start_time": {
                    "type": "integer",
                    "description": "UNIX Timestamp"
                },
                "finishers": {
                    "type": "object",
                    "description": "Only provided when the event status is FINAL. The key of the EventCompetitor is the finish position.",
                    "properties": {
                        "1": {
                            "type": "object",
                            "description": "To handle dead heats, a given finish position may have multiple event competitor objects inside the array",
                            "properties": {
                                "event_competitors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventCompetitor"
                                    }
                                }
                            }
                        },
                        "2": {
                            "type": "object",
                            "description": "To handle dead heats, a given finish position may have multiple event competitor objects inside the array",
                            "properties": {
                                "event_competitors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventCompetitor"
                                    }
                                }
                            }
                        },
                        "3": {
                            "type": "object",
                            "description": "To handle dead heats, a given finish position may have multiple event competitor objects inside the array",
                            "properties": {
                                "event_competitors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventCompetitor"
                                    }
                                }
                            }
                        },
                        "4": {
                            "type": "object",
                            "description": "To handle dead heats, a given finish position may have multiple event competitor objects inside the array",
                            "properties": {
                                "event_competitors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventCompetitor"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "EventCompetitor": {
            "type": "object",
            "properties": {
                "event_competitor_id": {
                    "type": "integer"
                },
                "betting_interest_number": {
                    "type": "integer"
                },
                "program_number": {
                    "type": "string"
                },
                "finish_position": {
                    "type": "integer"
                },
                "scratched": {
                    "type": "boolean"
                }
            }
        },
        "SingleLegToteMarket": {
            "type": "object",
            "description": "A representation of a market that has only one leg. \n\nTote: WIN, PLC, SHW, EW\n",
            "properties": {
                "provider_name": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency the market data is given in"
                },
                "market": {
                    "type": "object",
                    "properties": {
                        "prices": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "total": {
                            "description": "The pool total in full/ fractional units of currency as per the 'currency' attribute.",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "MutliLegToteMarket": {
            "type": "object",
            "description": "\"A representation of a market that has multiple legs. This could be multiple legs on a single event, e.g an Exacta pool or a multiple legs over many events e.g a Pick 6. Tote: EXA,QNL,QNP,TRI,TRO,SFC,FS4, PK1-9, P10-16, GSL, JPT, QPT\"\n  Multi leg pools will be given on the first race\n",
            "properties": {
                "provider": {
                    "type": "string"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency the market data is given i"
                },
                "legs": {
                    "description": "The races this multi leg pool appears in",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "market": {
                    "type": "object",
                    "properties": {
                        "prices": {
                            "type": "object",
                            "description": "An associative array containing key value maps of combinations and their prices. e.g { \"1\" => {\"2\" => 2.4, \"3\" => 4.0, \"4\" => 150.0} }"
                        },
                        "total": {
                            "description": "The pool total in units of currency as per the 'currency' attribute.",
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "ToteResultMarket": {
            "type": "object",
            "description": "A representation of results for a given market. The key inside the market name is the betting interest number of the finisher. \nFor exotic pools the key will contain multiple runners seperated by slashes e.g 1/4/6/3\n\n\"PLC\": {\n    \"1\": {\n        \"payout\": 11\n    },\n    \"3\": {\n        \"payout\": 7.4\n    }\n},\n\n\"SFC\": {\n    \"3/1/6/2\": {\n        \"finish_position\": 0,\n        \"payout\": 392.2\n    }\n},\n",
            "properties": {
                "provider": {
                    "type": "string"
                }
            }
        }
    }
}
